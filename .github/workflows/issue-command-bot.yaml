name: Issue Command Bot

on:
  issue_comment:
    types: [created]

permissions:
  issues: write
  pull-requests: write

jobs:
  process-command:
    runs-on: ubuntu-latest
    steps:
      - name: Process Commands
        uses: actions/github-script@v7
        with:
          script: |
            const comment = context.payload.comment.body.trim().toLowerCase();
            const commenter = context.payload.comment.user.login;
            const issueNumber = context.issue.number;
            const repoOwner = context.repo.owner;
            const repoName = context.repo.repo;

            // /assign command
            if (comment === "/assign") {
              await github.rest.issues.addAssignees({
                owner: repoOwner,
                repo: repoName,
                issue_number: issueNumber,
                assignees: [commenter]
              });
            }

            // /close command
            if (comment === "/close") {
              await github.rest.issues.update({
                owner: repoOwner,
                repo: repoName,
                issue_number: issueNumber,
                state: "closed",
                state_reason: "completed"
              });
            }

            // /reopen command
            if (comment === "/reopen") {
              await github.rest.issues.update({
                owner: repoOwner,
                repo: repoName,
                issue_number: issueNumber,
                state: "open",
                state_reason: "reopened"
              });
            }

            // /label command
            if (comment.startsWith("/label ")) {
              const labelName = comment.replace("/label ", "").trim();
              if (labelName) {
                try {
                  await github.rest.issues.addLabels({
                    owner: repoOwner,
                    repo: repoName,
                    issue_number: issueNumber,
                    labels: [labelName]
                  });
                } catch (error) {
                  if (error.status === 404) {
                    await github.rest.issues.createLabel({
                      owner: repoOwner,
                      repo: repoName,
                      name: labelName,
                      color: "0e8a16"
                    });
                    await github.rest.issues.addLabels({
                      owner: repoOwner,
                      repo: repoName,
                      issue_number: issueNumber,
                      labels: [labelName]
                    });
                  } else {
                    throw error;
                  }
                }
              }
            }

            // /help command
            if (comment === "/help") {
              const helpLabel = "help wanted";
              try {
                await github.rest.issues.addLabels({
                  owner: repoOwner,
                  repo: repoName,
                  issue_number: issueNumber,
                  labels: [helpLabel]
                });
              } catch (error) {
                if (error.status === 404) {
                  await github.rest.issues.createLabel({
                    owner: repoOwner,
                    repo: repoName,
                    name: helpLabel,
                    color: "008672",
                    description: "Extra attention is needed"
                  });
                  await github.rest.issues.addLabels({
                    owner: repoOwner,
                    repo: repoName,
                    issue_number: issueNumber,
                    labels: [helpLabel]
                  });
                } else {
                  throw error;
                }
              }
            }

            // /needs-triage command
            if (comment === "/needs-triage") {
              const triageLabel = "needs-triage";
              try {
                await github.rest.issues.addLabels({
                  owner: repoOwner,
                  repo: repoName,
                  issue_number: issueNumber,
                  labels: [triageLabel]
                });
              } catch (error) {
                if (error.status === 404) {
                  await github.rest.issues.createLabel({
                    owner: repoOwner,
                    repo: repoName,
                    name: triageLabel,
                    color: "d73a4a",
                    description: "This issue needs triage"
                  });
                  await github.rest.issues.addLabels({
                    owner: repoOwner,
                    repo: repoName,
                    issue_number: issueNumber,
                    labels: [triageLabel]
                  });
                } else {
                  throw error;
                }
              }
            }
